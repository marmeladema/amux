Amux
=====

Amux is an alsa IO plugin that multiplexes different PCM card and selects the
one to use from a configuration file.

/!\ This is still in development (see Limitations).

Build
-----

Simply run:
 $ make

Everything is built in ./build directory.

Configuration
-------------

In order to use this plugin you can write an asoundrc that looks like the
following:

----------------- 8< ------------------
cat > ~/.asoundrc << EOF
pcm_type.!amux {
        lib {
		@func getenv
		vars [
			AMUX_LIBRARY
		]
		default "./build/libasound_pcm_amux.so"
	}
}

pcm.!usb {
        type empty
        slave {
		pcm "cards.USB-Audio.pcm.default:CARD=1"
        }
}

pcm.!default {
        type amux
        file /tmp/sndcard
        list [
                {
                        pcm "sysdefault"
                }
                {
                        pcm "usb"
                }
                {
                        pcm "file:FILE=/tmp/audio-data.raw"
                }
                {
                        pcm "null"
                }
        ]
}
EOF
----------------- 8< ------------------

This configure amux plugin to multiplex 4 PCM cards, the system default, an usb
one, a fake file and a null PCM. The plugin will select the PCM card to use
accordingly to /tmp/sndcard file.

Usage
-----

To use this plugin, first select the soundcard index to use. For example
with the previous configuration, if you want to use the usb card, use the
following:
 $ echo -n "1" > /tmp/sndcard

Then test that everything works with:
 $ export ALSA_CONFIG_PATH=<path-to-asoundrc>
 $ export AMUX_LIBRARY=<path-to-libasound_pcm_amux.so>
 $ aplay -f cd <file.wav>

Polling mode
------------

There is two different ways to poll. The dup-poll-mode creates some mock file
descriptors using dup2 and the thread-mode uses a thread to poll for slave and
notifies the user through an eventfd.

The default mode is the dup-poll-mode. To switch to thread-mode, one should
comment the line "#define AMUX_DUPFD" in src/amux.c.

Limitations
-----------

 - Live switch with different buffer_size/period_size PCM is unstable
 - Only support playback
 - There is no control plugin yet (to live switch default control card)
 - There is no mmap support yet
 - It cannot live switch PCM with different rate (it's important to use a
   softrate plugin).
 - It creates a dozen of fake fd and is limited in the number of pollfd a slave
   can have (4 by default) when compiled in default mode (dup-poll-mode).
 - It creates a thread for polling (in thread-mode) at each snd_pcm_open(). I
   may create a polling char device driver to workaround the two previous
   limitations.

Firefox
-------

Firefox uses a sandbox for security reasons. If you want to use this plugin in
dup-poll-mode (the default mode) with firefox, the dup2() syscall has to be
added in the whitelist. For example on x86_64 one should go to about:config and
add 33 (dup2 syscall nb) in the "security.sandbox.content.syscall_whitelist".
